name: Build OTX Server 2 - Windows  
  
on:  
  push:  
    branches: [ main, master ]  
  pull_request:  
    branches: [ main, master ]  
  
jobs:  
  build-windows:  
    runs-on: windows-2022  
      
    steps:  
      - name: Checkout repository  
        uses: actions/checkout@v4  
          
      - name: Setup MSBuild  
        uses: microsoft/setup-msbuild@v2  
          
      - name: Cache vcpkg  
        uses: actions/cache@v4  
        with:  
          path: |  
            C:\vcpkg\installed  
            C:\vcpkg\buildtrees  
            C:\vcpkg\packages  
          key: ${{ runner.os }}-vcpkg-boost165-${{ hashFiles('**/vcpkg.json') }}  
          restore-keys: |  
            ${{ runner.os }}-vcpkg-boost165-  
              
      - name: Install dependencies via vcpkg  
        run: |  
          if (!(Test-Path "C:\vcpkg")) {  
            git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg  
            C:\vcpkg\bootstrap-vcpkg.bat  
          }  
          # Tentar instalar Boost 1.65, se não disponível, usar versão mais antiga compatível  
          try {  
            C:\vcpkg\vcpkg install boost:x64-windows@1.65.1 --recurse  
          } catch {  
            Write-Host "Boost 1.65.1 not available, trying 1.64..."  
            C:\vcpkg\vcpkg install boost:x64-windows@1.64.0 --recurse  
          }  
          # Instalar outras dependências  
          C:\vcpkg\vcpkg install libxml2:x64-windows --recurse  
          C:\vcpkg\vcpkg install sqlite3:x64-windows --recurse  
          C:\vcpkg\vcpkg install openssl:x64-windows --recurse  
          C:\vcpkg\vcpkg install lua:x64-windows --recurse  
          C:\vcpkg\vcpkg install pugixml:x64-windows --recurse  
            
      - name: Setup Boost directory structure  
        run: |  
          # Verificar se vcpkg instalou corretamente  
          if (!(Test-Path "C:\vcpkg\installed\x64-windows\include\boost")) {  
            Write-Error "vcpkg Boost installation failed"  
            exit 1  
          }  
            
          # Criar estrutura esperada pelo projeto  
          mkdir C:\local\boost_1_65_1 -Force  
            
          # Copiar headers do boost (incluindo subdiretório boost)  
          if (Test-Path "C:\vcpkg\installed\x64-windows\include\boost") {  
            xcopy /E /I "C:\vcpkg\installed\x64-windows\include\boost" "C:\local\boost_1_65_1\boost\"  
          }  
            
          # Copiar outros headers se existirem  
          Get-ChildItem "C:\vcpkg\installed\x64-windows\include\" -Directory | ForEach-Object {  
            if ($_.Name -ne "boost") {  
              xcopy /E /I $_.FullName "C:\local\boost_1_65_1\$($_.Name)\"  
            }  
          }  
            
          # Copiar bibliotecas  
          mkdir "C:\local\boost_1_65_1\lib64-msvc-14.3" -Force  
          if (Test-Path "C:\vcpkg\installed\x64-windows\lib") {  
            xcopy /E /I "C:\vcpkg\installed\x64-windows\lib\*" "C:\local\boost_1_65_1\lib64-msvc-14.3\"  
          }  
            
      - name: Verify dependencies installation  
        run: |  
          # Verificar Boost com mais detalhes  
          Write-Host "Checking Boost installation..."  
          Write-Host "Looking for: C:\local\boost_1_65_1\boost\config.hpp"  
            
          if (Test-Path "C:\local\boost_1_65_1\boost\config.hpp") {  
            Write-Host "✓ Boost headers found successfully"  
          } else {  
            Write-Host "❌ Boost config.hpp not found"  
            Write-Host "Directory contents:"  
            if (Test-Path "C:\local\boost_1_65_1") {  
              Get-ChildItem "C:\local\boost_1_65_1" -Recurse | Select-Object FullName | Format-Table -AutoSize  
            }  
            Write-Host "vcpkg Boost contents:"  
            if (Test-Path "C:\vcpkg\installed\x64-windows\include\boost") {  
              Get-ChildItem "C:\vcpkg\installed\x64-windows\include\boost" | Select-Object Name | Format-Table -AutoSize  
            }  
            Write-Error "Boost headers not found"  
            exit 1  
          }  
            
          # Verificar outras dependências  
          $deps = @("libxml2", "sqlite3", "openssl", "lua", "pugixml")  
          foreach ($dep in $deps) {  
            if (Test-Path "C:\vcpkg\installed\x64-windows\include\$dep*") {  
              Write-Host "✓ $dep found"  
            } else {  
              Write-Warning "⚠ $dep headers may be missing"  
            }  
          }
