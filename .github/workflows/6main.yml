name: 🏗️ Build OTX Server - Release x64  
on:     
  push:    
    branches: [ main, develop ]    
  pull_request:    
    branches: [ main ]    
    
jobs:    
  build:    
    name: 🚀 Build Release x64  
    runs-on: windows-latest  
        
    steps:    
      - name: 📥 Checkout Repository  
        uses: actions/checkout@v4    
            
      - name: 💾 Cache Boost Libraries  
        uses: actions/cache@v4    
        id: cache-boost    
        with:    
          path: |    
            C:\ProgramData\chocolatey\lib\boost-msvc-14.3*  
            C:\local\boost_1_84_0    
          key: boost-1.84.0-msvc-14.3-choco-${{ runner.os }}    
              
      - name: 🍫 Install Boost via Chocolatey    
        if: steps.cache-boost.outputs.cache-hit != 'true'    
        run: |    
          Write-Host "🔽 Instalando Boost 1.84.0..." -ForegroundColor Yellow  
          choco install boost-msvc-14.3 --version=1.84.0 -y    
            
          Write-Host "🔍 Verificando instalação do Boost..." -ForegroundColor Cyan  
            
          # Verificar onde o Boost foi instalado  
          $boostLibPath = Get-ChildItem "C:\ProgramData\chocolatey\lib" -Directory | Where-Object { $_.Name -like "*boost*" }  
            
          if ($boostLibPath) {  
            Write-Host "📦 Boost encontrado em: $($boostLibPath.FullName)" -ForegroundColor Green  
              
            # Lista de possíveis caminhos onde o Boost pode estar  
            $possiblePaths = @(  
              Join-Path $boostLibPath.FullName "tools",  
              $boostLibPath.FullName  
            )  
              
            $foundPath = $null  
            foreach ($path in $possiblePaths) {  
              if (Test-Path $path) {  
                $foundPath = $path  
                Write-Host "✅ Boost encontrado em: $path" -ForegroundColor Green  
                break  
              }  
            }  
              
            Write-Host "📁 Configurando diretórios..." -ForegroundColor Cyan  
            if (!(Test-Path "C:\local")) {   
              New-Item -ItemType Directory -Path "C:\local"   
            }  
              
            if ($foundPath -and !(Test-Path "C:\local\boost_1_84_0")) {  
              New-Item -ItemType SymbolicLink -Path "C:\local\boost_1_84_0" -Target $foundPath  
              Write-Host "🔗 Link simbólico criado: C:\local\boost_1_84_0 -> $foundPath" -ForegroundColor Green  
            }  
          } else {  
            throw "❌ Boost não encontrado após instalação"  
          }  
            
          Write-Host "✅ Boost configurado!" -ForegroundColor Green  
        shell: powershell    
            
      - name: ⚙️ Setup MSBuild    
        uses: microsoft/setup-msbuild@v2    
            
      - name: 🔍 Verify Build Environment    
        run: |    
          Write-Host "🔧 === Build Environment Check ===" -ForegroundColor Cyan  
          Write-Host "📦 Boost Path: $(if (Test-Path 'C:\local\boost_1_84_0') { '✅ OK' } else { '❌ MISSING' })"    
          Write-Host "📚 Boost Libs: $(if (Test-Path 'C:\local\boost_1_84_0\lib64-msvc-14.3') { '✅ OK' } else { '❌ MISSING' })"    
          Write-Host "🛠️ MSBuild Version:" -ForegroundColor Cyan  
          msbuild -version    
          Write-Host "✨ Environment ready!" -ForegroundColor Green  
        shell: powershell    
            
      - name: 🚀 Build OTX Server (Release x64)  
        run: |    
          Write-Host "🔨 Compilando OTX Server em Release x64..." -ForegroundColor Yellow  
          msbuild sources/msvc/TheOTXServer.vcxproj /p:Configuration=Release /p:Platform=x64 /m /v:minimal /p:WarningLevel=1  
          Write-Host "🎉 Compilação concluída!" -ForegroundColor Green  
        shell: powershell    
            
      - name: 🧪 Validate Build Output  
        run: |  
          Write-Host "🔍 === VALIDAÇÃO DO BUILD ===" -ForegroundColor Cyan  
            
          $exePath = "sources/msvc/x64/Release/TheOTXServer.exe"  
            
          if (Test-Path $exePath) {  
            $fileInfo = Get-Item $exePath  
            $sizeInMB = [math]::Round($fileInfo.Length / 1MB, 2)  
              
            Write-Host "✅ Executável encontrado!" -ForegroundColor Green  
            Write-Host "📦 Tamanho: $sizeInMB MB" -ForegroundColor Cyan  
            Write-Host "📅 Data de criação: $($fileInfo.CreationTime)" -ForegroundColor Cyan  
            Write-Host "✅ Build validado com sucesso!" -ForegroundColor Green  
          } else {  
            Write-Host "❌ Executável não encontrado em: $exePath" -ForegroundColor Red  
            throw "Build falhou - executável não foi gerado"  
          }  
        shell: powershell  
            
      - name: 📦 Upload Release Artifacts  
        uses: actions/upload-artifact@v4    
        with:    
          name: 🎯 OTXServer-Release-x64-${{ github.sha }}  
          path: |    
            sources/msvc/x64/Release/TheOTXServer.exe    
            sources/msvc/x64/Release/TheOTXServer.pdb    
          retention-days: 30  
  
      - name: 📊 Build Summary  
        if: success()  
        run: |  
          Write-Host "🎊 === BUILD SUCCESSFUL ===" -ForegroundColor Green  
          Write-Host "📁 Artifact: OTXServer-Release-x64-${{ github.sha }}" -ForegroundColor Cyan  
          $exeSize = [math]::Round((Get-Item 'sources/msvc/x64/Release/TheOTXServer.exe').Length / 1MB, 2)  
          Write-Host "💾 Size: $exeSize MB" -ForegroundColor Cyan  
          Write-Host "🕒 Build completed at: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" -ForegroundColor Cyan  
          Write-Host "✨ Ready for deployment!" -ForegroundColor Green  
        shell: powershell
